# IP forwarding
- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes
  when: ansible_all_ipv6_addresses

# IP tables
- name: Set iptables implementation
  alternatives:
    name: iptables
    link: /usr/sbin/iptables
    path: /usr/sbin/iptables-{{ iptables_alternative }}
  when: ansible_facts['os_family']|lower == 'debian'
- name: Set ip6tables implementation
  alternatives:
    name: ip6tables
    link: /usr/sbin/ip6tables
    path: /usr/sbin/ip6tables-{{ iptables_alternative }}
  when: ansible_facts['os_family']|lower == 'debian'

# IP filtering
- name: Add br_netfilter to /etc/modules-load.d/
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']
- name: Load br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']
- name: Set bridge-nf-call-iptables (just to be sure)
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

# Missing apparmor parser
# See: https://github.com/rancher/k3os/issues/702
- name: Add apparmor parser
  apt:
    package: apparmor
    state: latest
  when: ansible_facts['os_family']|lower == 'debian'

# Missing /usr/local/bin 
- name: Add /usr/local/bin to sudo secure_path
  lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

# Too low inotify settings
- name: increase inotify settings
  copy:
    content: |
      fs.inotify.max_user_instances = 160
      fs.inotify.max_user_watches   = 204800
    dest: /etc/sysctl.d/50-inotify.conf
    mode: 0644
    owner: root
    group: root
  register: increase_inotify
- name: apply inotify settings
  shell: sysctl -p /etc/sysctl.d/50-inotify.conf
  when: increase_inotify.changed

# Transparent huge pages
# See:
# - https://blog.nelhage.com/post/transparent-hugepages/
- name: madvise transparent huge pages
  copy:
    content: |
      if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
        echo madvise > /sys/kernel/mm/transparent_hugepage/enabled
      fi
    dest: /etc/rc.local.d/transparent_hugepage-madvise.sh
    mode: 0755
    owner: root
    group: root
  register: transparent_hugepage
- name: apply transparent_hugepage
  shell: /etc/rc.local.d/transparent_hugepage-madvise.sh
  when: transparent_hugepage.changed
